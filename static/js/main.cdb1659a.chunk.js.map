{"version":3,"sources":["BookCard.jsx","App.jsx","index.js"],"names":["BookCard","thumbnail","title","pageCount","language","description","authors","publisher","previewLink","infoLink","useState","modal","setModal","toggle","Card","style","width","className","CardImg","top","height","src","alt","CardBody","CardTitle","Button","onClick","Modal","isOpen","id","aria-label","type","aria-hidden","href","color","target","rel","App","maxResults","setMaxResults","startIndex","setStartIndex","query","setQuery","loading","setLoading","cards","setCards","handleSubmit","toast","error","axios","get","then","res","data","totalItems","items","length","catch","err","console","log","response","zIndex","InputGroup","size","Input","placeholder","value","onChange","e","InputGroupAddon","addonType","FormGroup","Label","for","Spinner","map","item","i","volumeInfo","imageLinks","key","handleCards","ReactDOM","render","document","getElementById"],"mappings":"gWAuFeA,EArFE,SAAC,GAUX,IATLC,EASI,EATJA,UACAC,EAQI,EARJA,MACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,SACAC,EAKI,EALJA,YACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,YACAC,EACI,EADJA,SACI,EAEsBC,oBAAS,GAF/B,mBAEGC,EAFH,KAEUC,EAFV,KAGEC,EAAS,kBAAMD,GAAUD,IAE/B,OACE,kBAACG,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAWC,UAAU,UACzC,kBAACC,EAAA,EAAD,CACEC,KAAG,EACHJ,MAAO,CAAEC,MAAO,OAAQI,OAAQ,SAChCC,IAAKpB,EACLqB,IAAKpB,IAEP,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWP,UAAU,cAAcf,GACnC,kBAACuB,EAAA,EAAD,CAAQC,QAASb,GAAjB,cAEF,kBAACc,EAAA,EAAD,CAAOC,OAAQjB,EAAOE,OAAQA,GAC5B,yBAAKI,UAAU,8CACb,wBAAIA,UAAU,0BAA0BY,GAAG,qBACxC3B,GAEH,4BACE4B,aAAW,QACXb,UAAU,QACVc,KAAK,SACLL,QAASb,GAET,0BAAMmB,eAAa,GAAnB,OAGJ,yBAAKf,UAAU,cACb,yBAAKA,UAAU,uCACb,yBAAKI,IAAKpB,EAAWqB,IAAKpB,EAAOa,MAAO,CAAEK,OAAQ,WAClD,6BACE,0CAAgBjB,GAChB,yCAAeC,GACf,wCAAcE,GACd,0CAAgBC,KAGpB,yBAAKU,UAAU,QAAQZ,IAEzB,yBAAKY,UAAU,gBACb,yBAAKA,UAAU,cACb,uBACEgB,KAAMzB,EACNS,UAAU,WACViB,MAAM,UACNH,KAAK,SACLI,OAAO,SACPC,IAAI,uBANN,iBAWF,yBAAKnB,UAAU,YACf,yBAAKA,UAAU,eACb,uBACEgB,KAAMxB,EACNQ,UAAU,WACViB,MAAM,UACNH,KAAK,SACLI,OAAO,SACPC,IAAI,uBANN,kBC8EGC,MArIf,WAAe,MAEuB3B,mBAAS,IAFhC,mBAEN4B,EAFM,KAEMC,EAFN,OAGuB7B,mBAAS,GAHhC,mBAGN8B,EAHM,KAGMC,EAHN,OAIa/B,mBAAS,IAJtB,mBAINgC,EAJM,KAICC,EAJD,OAKiBjC,oBAAS,GAL1B,mBAKNkC,EALM,KAKGC,EALH,OAManC,mBAAS,IANtB,mBAMNoC,EANM,KAMCC,EAND,KAQPC,EAAe,WACnBH,GAAW,GACPP,EAAa,IAAMA,EAAa,EAClCW,QAAMC,MAAM,wCAEZC,IACGC,IADH,wDAEqDV,EAFrD,uBAEyEJ,EAFzE,uBAEkGE,IAE/Fa,MAAK,SAAAC,GACAd,GAAcc,EAAIC,KAAKC,YAAchB,EAAa,EACpDS,QAAMC,MAAN,2CACsCI,EAAIC,KAAKC,aAG3CF,EAAIC,KAAKE,MAAMC,OAAS,IAC1BX,EAASO,EAAIC,KAAKE,OAClBZ,GAAW,OAIhBc,OAAM,SAAAC,GACLf,GAAW,GACXgB,QAAQC,IAAIF,EAAIG,cA6FxB,OACE,yBAAK9C,UAAU,eAvFb,yBAAKA,UAAU,2EAEb,yBAAKA,UAAU,WACf,wBACEA,UAAU,wCACVF,MAAO,CAAEiD,OAAQ,IAFnB,gBAMA,yBAAKjD,MAAO,CAAEC,MAAO,MAAOgD,OAAQ,IAClC,kBAACC,EAAA,EAAD,CAAYC,KAAK,KAAKjD,UAAU,QAC9B,kBAACkD,EAAA,EAAD,CACEC,YAAY,cACZC,MAAO3B,EACP4B,SAAU,SAAAC,GAAC,OAAI5B,EAAS4B,EAAEpC,OAAOkC,UAEnC,kBAACG,EAAA,EAAD,CAAiBC,UAAU,UACzB,kBAAChD,EAAA,EAAD,CAAQS,MAAM,OAAOR,QAASsB,GAC5B,uBAAG/B,UAAU,qBAInB,yBAAKA,UAAU,4CACb,kBAACyD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,IAAI,cAAX,eACA,kBAACT,EAAA,EAAD,CACEpC,KAAK,SACLF,GAAG,aACHuC,YAAY,cACZC,MAAO/B,EACPgC,SAAU,SAAAC,GAAC,OAAIhC,EAAcgC,EAAEpC,OAAOkC,WAG1C,kBAACK,EAAA,EAAD,CAAWzD,UAAU,QACnB,kBAAC0D,EAAA,EAAD,CAAOC,IAAI,cAAX,eACA,kBAACT,EAAA,EAAD,CACEpC,KAAK,SACLF,GAAG,aACHuC,YAAY,cACZC,MAAO7B,EACP8B,SAAU,SAAAC,GAAC,OAAI9B,EAAc8B,EAAEpC,OAAOkC,cAShC,WAClB,GAAIzB,EACF,OACE,yBAAK3B,UAAU,sCACb,kBAAC4D,EAAA,EAAD,CAAS9D,MAAO,CAAEC,MAAO,OAAQI,OAAQ,WAI7C,IAAMqC,EAAQX,EAAMgC,KAAI,SAACC,EAAMC,GAC7B,IAAI/E,EAAY,GAKhB,OAJI8E,EAAKE,WAAWC,aAClBjF,EAAY8E,EAAKE,WAAWC,WAAWjF,WAIvC,yBAAKgB,UAAU,gBAAgBkE,IAAKJ,EAAKlD,IACvC,kBAAC,EAAD,CACE5B,UAAWA,EACXC,MAAO6E,EAAKE,WAAW/E,MACvBC,UAAW4E,EAAKE,WAAW9E,UAC3BC,SAAU2E,EAAKE,WAAW7E,SAC1BE,QAASyE,EAAKE,WAAW3E,QACzBC,UAAWwE,EAAKE,WAAW1E,UAC3BF,YAAa0E,EAAKE,WAAW5E,YAC7BG,YAAauE,EAAKE,WAAWzE,YAC7BC,SAAUsE,EAAKE,WAAWxE,eAKlC,OACE,yBAAKQ,UAAU,yBACb,yBAAKA,UAAU,OAAOwC,IAQzB2B,GACD,kBAAC,iBAAD,QC3INC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cdb1659a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardTitle, CardImg, CardBody, Button, Modal } from 'reactstrap';\nconst BookCard = ({\n  thumbnail,\n  title,\n  pageCount,\n  language,\n  description,\n  authors,\n  publisher,\n  previewLink,\n  infoLink\n}) => {\n  // States\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Card style={{ width: '233px' }} className='m-auto'>\n      <CardImg\n        top\n        style={{ width: '100%', height: '233px' }}\n        src={thumbnail}\n        alt={title}\n      />\n      <CardBody>\n        <CardTitle className='card-title'>{title}</CardTitle>\n        <Button onClick={toggle}>More info</Button>\n      </CardBody>\n      <Modal isOpen={modal} toggle={toggle}>\n        <div className='modal-header d-flex justify-content-center'>\n          <h5 className='modal-title text-center' id='exampleModalLabel'>\n            {title}\n          </h5>\n          <button\n            aria-label='Close'\n            className='close'\n            type='button'\n            onClick={toggle}\n          >\n            <span aria-hidden={true}>X</span>\n          </button>\n        </div>\n        <div className='modal-body'>\n          <div className='d-flex justify-content-between ml-3'>\n            <img src={thumbnail} alt={title} style={{ height: '233px' }} />\n            <div>\n              <p>Page Count: {pageCount}</p>\n              <p>Language : {language}</p>\n              <p>Authors : {authors}</p>\n              <p>Publisher : {publisher}</p>\n            </div>\n          </div>\n          <div className='mt-3'>{description}</div>\n        </div>\n        <div className='modal-footer'>\n          <div className='left-silde'>\n            <a\n              href={previewLink}\n              className='btn-link'\n              color='default'\n              type='button'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              Preview Link\n            </a>\n          </div>\n          <div className='divider'></div>\n          <div className='right-silde'>\n            <a\n              href={infoLink}\n              className='btn-link'\n              color='default'\n              type='button'\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              Info Link\n            </a>\n          </div>\n        </div>\n      </Modal>\n    </Card>\n  );\n};\n\nexport default BookCard;\n","import React, { useState } from 'react';\nimport './App.css';\nimport {\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  Button,\n  FormGroup,\n  Label,\n  Spinner\n} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport axios from 'axios';\nimport BookCard from './BookCard.jsx';\nfunction App() {\n  // States\n  const [maxResults, setMaxResults] = useState(10);\n  const [startIndex, setStartIndex] = useState(1);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [cards, setCards] = useState([]);\n  // Handle Search\n  const handleSubmit = () => {\n    setLoading(true);\n    if (maxResults > 40 || maxResults < 1) {\n      toast.error('max results must be between 1 and 40');\n    } else {\n      axios\n        .get(\n          `https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=${maxResults}&startIndex=${startIndex}`\n        )\n        .then(res => {\n          if (startIndex >= res.data.totalItems || startIndex < 1) {\n            toast.error(\n              `max reults must be between 1 and ${res.data.totalItems}`\n            );\n          } else {\n            if (res.data.items.length > 0) {\n              setCards(res.data.items);\n              setLoading(false);\n            }\n          }\n        })\n        .catch(err => {\n          setLoading(true);\n          console.log(err.response);\n        });\n    }\n  };\n  // Main Show Case\n  const mainHeader = () => {\n    return (\n      <div className='main-image d-flex justify-content-center align-items-center flex-column'>\n        {/* Overlay */}\n        <div className='filter'></div>\n        <h1\n          className='display-2 text-center text-white mb-3'\n          style={{ zIndex: 2 }}\n        >\n          Google Books\n        </h1>\n        <div style={{ width: '60%', zIndex: 2 }}>\n          <InputGroup size='lg' className='mb-3'>\n            <Input\n              placeholder='Book Search'\n              value={query}\n              onChange={e => setQuery(e.target.value)}\n            />\n            <InputGroupAddon addonType='append'>\n              <Button color='info' onClick={handleSubmit}>\n                <i className='fas fa-search'></i>\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n          <div className='d-flex text-white justify-content-center'>\n            <FormGroup >\n              <Label for='maxResults'>Max Results</Label>\n              <Input\n                type='number'\n                id='maxResults'\n                placeholder='Max Results'\n                value={maxResults}\n                onChange={e => setMaxResults(e.target.value)}\n              />\n            </FormGroup>\n            <FormGroup className='ml-5'>\n              <Label for='startIndex'>Start Index</Label>\n              <Input\n                type='number'\n                id='startIndex'\n                placeholder='Start Index'\n                value={startIndex}\n                onChange={e => setStartIndex(e.target.value)}\n              />\n            </FormGroup>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const handleCards = () => {\n    if (loading) {\n      return (\n        <div className='d-flex justify-content-center mt-3'>\n          <Spinner style={{ width: '3rem', height: '3rem' }} />\n        </div>\n      );\n    } else {\n      const items = cards.map((item, i) => {\n        let thumbnail = '';\n        if (item.volumeInfo.imageLinks) {\n          thumbnail = item.volumeInfo.imageLinks.thumbnail;\n        }\n\n        return (\n          <div className='col-lg-4 mb-3' key={item.id}>\n            <BookCard\n              thumbnail={thumbnail}\n              title={item.volumeInfo.title}\n              pageCount={item.volumeInfo.pageCount}\n              language={item.volumeInfo.language}\n              authors={item.volumeInfo.authors}\n              publisher={item.volumeInfo.publisher}\n              description={item.volumeInfo.description}\n              previewLink={item.volumeInfo.previewLink}\n              infoLink={item.volumeInfo.infoLink}\n            />\n          </div>\n        );\n      });\n      return (\n        <div className='container bg-red my-5'>\n          <div className='row'>{items}</div>\n        </div>\n      );\n    }\n  };\n  return (\n    <div className='w-100 h-100'>\n      {mainHeader()}\n      {handleCards()}\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}